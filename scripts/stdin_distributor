#!/usr/bin/env node

const fs = require('fs');

const argv = require('optimist')
    .usage('Distributes input stream to multiple output streams\nUsage: $0')
    .options('i', {
      alias : 'input',
      describe: 'Input file',
      demand: true,
    })
    .options('o', {
      alias : 'output',
      describe: 'Output file',
      demand: true,
    })
    .argv;


console.log('initialising');

const source = argv.input;
const targets = [].concat(argv.output);

const readStream = fs.createReadStream(source);

const duplicateStream = (fileName) => {
  console.log(`creating stream: ${source} -> ${fileName}`);
  const writeStream = fs.createWriteStream(fileName);

  const writeToStream = data => writeStream.write(data);

  readStream.on('data', writeToStream);

  writeStream.on('error', (e) => {
    console.log(`consumer of "${fileName}" disconnected`);
    readStream.off('data', writeToStream);
    duplicateStream(fileName);
  });
}

targets.forEach(duplicateStream);

readStream.on('end', () => {
  console.log('exiting');
  process.kill( process.pid, 'SIGTERM' );
});
