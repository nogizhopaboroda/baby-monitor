#!/usr/bin/env node

const WebSocket = require('ws');
const createReadStreamHandler = require('../lib/read-stream-handler');

const argv = require('optimist')
    .usage('Broadcasts input stream over websockets\nUsage: $0')
    .options('i', {
      alias : 'input',
      describe: 'Input file',
      demand: true,
    })
    .options('p', {
      alias : 'port',
      describe: 'server port',
      default: 8080,
    })
    .argv;


console.log('initialising');

const source = argv.input;
const port = argv.port;

const wss = new WebSocket.Server({ port });

const connections = new Set();

wss.on('connection', (ws) => {
  console.log('client connected');
  connections.add(ws);
  ws.on('close', () => {
    connections.delete(ws);
    console.log('client disconnected')
  });
});

const onData = (data) => {
  connections.forEach((ws) => ws.send(data));
}

const onOpen = () => {
  console.log(`initialising input stream from ${source}`);
};

const onClose = (stream) => {
  console.log('input stream closed');
  source === '-' && process.exit(0);
};

createReadStreamHandler({ source, onOpen, onData, onClose });
